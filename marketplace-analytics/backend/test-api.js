const axios = require('axios');

const BASE_URL = 'http://localhost:3000/api';

async function testAPI() {
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API...\n');
  
  try {
    // 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ health endpoint
    console.log('1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ health endpoint...');
    const healthResponse = await axios.get(`${BASE_URL}/health`);
    console.log(`‚úÖ Health check: ${healthResponse.status} - ${JSON.stringify(healthResponse.data)}\n`);
    
    // 2. –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    console.log('2Ô∏è‚É£ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...');
    const registerData = {
      email: 'test@example.com',
      password: 'password123',
      name: 'Test User'
    };
    
    try {
      const registerResponse = await axios.post(`${BASE_URL}/auth/register`, registerData);
      console.log(`‚úÖ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è: ${registerResponse.status}`);
      console.log(`   Token: ${registerResponse.data.accessToken?.substring(0, 20)}...`);
    } catch (error) {
      if (error.response?.status === 409) {
        console.log('‚ö†Ô∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –ø—Ä–æ–±—É–µ–º –≤–æ–π—Ç–∏...');
      } else {
        throw error;
      }
    }
    
    // 3. –õ–æ–≥–∏–Ω
    console.log('\n3Ô∏è‚É£ –í—Ö–æ–¥ –≤ —Å–∏—Å—Ç–µ–º—É...');
    const loginData = {
      email: 'test@example.com',
      password: 'password123'
    };
    
    const loginResponse = await axios.post(`${BASE_URL}/auth/login`, loginData);
    console.log(`‚úÖ –õ–æ–≥–∏–Ω: ${loginResponse.status}`);
    const token = loginResponse.data.accessToken;
    console.log(`   Token: ${token.substring(0, 20)}...`);
    
    // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏ –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
    const authHeaders = {
      'Authorization': `Bearer ${token}`,
      'Content-Type': 'application/json'
    };
    
    // 4. –ü–æ–ª—É—á–µ–Ω–∏–µ –æ—Ç—á–µ—Ç–æ–≤
    console.log('\n4Ô∏è‚É£ –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –æ—Ç—á–µ—Ç–æ–≤...');
    const reportsResponse = await axios.get(`${BASE_URL}/uploads`, { headers: authHeaders });
    console.log(`‚úÖ –û—Ç—á–µ—Ç—ã: ${reportsResponse.status}`);
    console.log(`   –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Ç—á–µ—Ç–æ–≤: ${reportsResponse.data.length}`);
    
    if (reportsResponse.data.length > 0) {
      console.log('   –ü–µ—Ä–≤—ã–π –æ—Ç—á–µ—Ç:');
      const firstReport = reportsResponse.data[0];
      console.log(`     - –§–∞–π–ª: ${firstReport.fileName}`);
      console.log(`     - –ú–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å: ${firstReport.marketplace}`);
      console.log(`     - –û–±—Ä–∞–±–æ—Ç–∞–Ω: ${firstReport.processed}`);
      console.log(`     - –ó–∞–ø–∏—Å–µ–π –ø—Ä–æ–¥–∞–∂: ${firstReport._count?.salesData || 0}`);
      console.log(`     - –í—ã—Ä—É—á–∫–∞: ${firstReport.totalRevenue || '–Ω–µ —Ä–∞—Å—Å—á–∏—Ç–∞–Ω–∞'}`);
      console.log(`     - –ü—Ä–∏–±—ã–ª—å: ${firstReport.totalProfit || '–Ω–µ —Ä–∞—Å—Å—á–∏—Ç–∞–Ω–∞'}`);
    }
    
    // 5. –ü–æ–ª—É—á–µ–Ω–∏–µ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ –¥–∞—à–±–æ—Ä–¥–∞
    console.log('\n5Ô∏è‚É£ –ü–æ–ª—É—á–µ–Ω–∏–µ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ –¥–∞—à–±–æ—Ä–¥–∞...');
    const analyticsResponse = await axios.get(`${BASE_URL}/analytics/dashboard`, { headers: authHeaders });
    console.log(`‚úÖ –ê–Ω–∞–ª–∏—Ç–∏–∫–∞: ${analyticsResponse.status}`);
    const analytics = analyticsResponse.data;
    console.log(`   –û–±—â–∞—è –≤—ã—Ä—É—á–∫–∞: ${analytics.totalRevenue}‚ÇΩ`);
    console.log(`   –û–±—â–∞—è –ø—Ä–∏–±—ã–ª—å: ${analytics.totalProfit}‚ÇΩ`);
    console.log(`   –ú–∞—Ä–∂–∏–Ω–∞–ª—å–Ω–æ—Å—Ç—å: ${analytics.profitMargin?.toFixed(2)}%`);
    console.log(`   –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–∫–∞–∑–æ–≤: ${analytics.totalOrders}`);
    console.log(`   –¢–æ–ø —Ç–æ–≤–∞—Ä–æ–≤: ${analytics.topProducts?.length || 0}`);
    console.log(`   –î–Ω–µ–≤–Ω—ã—Ö –ø—Ä–æ–¥–∞–∂: ${analytics.dailySales?.length || 0}`);
    
    if (analytics.topProducts && analytics.topProducts.length > 0) {
      console.log('\n   üèÜ –¢–æ–ø-3 —Ç–æ–≤–∞—Ä–∞ –ø–æ –ø—Ä–∏–±—ã–ª–∏:');
      analytics.topProducts.slice(0, 3).forEach((product, index) => {
        console.log(`     ${index + 1}. ${product.productName} (${product.sku})`);
        console.log(`        –í—ã—Ä—É—á–∫–∞: ${product.revenue}‚ÇΩ, –ü—Ä–∏–±—ã–ª—å: ${product.profit}‚ÇΩ`);
      });
    }
    
    // 6. –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–µ—Ç–∞–ª—å–Ω–æ–π –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ –ø–æ –æ—Ç—á–µ—Ç—É
    if (reportsResponse.data.length > 0) {
      const reportId = reportsResponse.data.find(r => r._count?.salesData > 0)?.id;
      if (reportId) {
        console.log('\n6Ô∏è‚É£ –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–µ—Ç–∞–ª—å–Ω–æ–π –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ –ø–æ –æ—Ç—á–µ—Ç—É...');
        const reportAnalyticsResponse = await axios.get(`${BASE_URL}/analytics/report/${reportId}`, { headers: authHeaders });
        console.log(`‚úÖ –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –æ—Ç—á–µ—Ç–∞: ${reportAnalyticsResponse.status}`);
        const reportAnalytics = reportAnalyticsResponse.data;
        console.log(`   –í—ã—Ä—É—á–∫–∞ –æ—Ç—á–µ—Ç–∞: ${reportAnalytics.totalRevenue}‚ÇΩ`);
        console.log(`   –ü—Ä–∏–±—ã–ª—å –æ—Ç—á–µ—Ç–∞: ${reportAnalytics.totalProfit}‚ÇΩ`);
        console.log(`   –ó–∞–∫–∞–∑–æ–≤ –≤ –æ—Ç—á–µ—Ç–µ: ${reportAnalytics.totalOrders}`);
      }
    }
    
    console.log('\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã API –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ API:', error.response?.data || error.message);
    if (error.response) {
      console.error(`   –°—Ç–∞—Ç—É—Å: ${error.response.status}`);
      console.error(`   URL: ${error.config?.url}`);
    }
  }
}

testAPI();